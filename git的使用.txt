上传项目
进入项目，在终端运行

$ git status
输入git status查看当前版本库状态，在Untracked files(未跟踪文件)下，会出现红色的readme.txt，代表此文件还未被Git所管理。

使用git add readme.txt，将该文件加入缓冲区，如果你确定所有的修改都需要提交，可以使用git add .来加入所有修改。现在用git status查看，将看到文件名变为绿色。

$ git add .
记录此次提交并上传

$ git commit -m 'my project push'
$ git push origin master
之后输入然后git commit -m "my project push"  引号内的内容可以随意改动，这个语句的意思是 给你刚刚上传的文件一个备注，方便查找记忆而已。

这里的master指的是主分支名，如果是其他分支，则填写相应的分支名。

提交成功后，可以用git log查看历史提交记录。每个记录都会有提交id，作者和提交日期。

你可以用git branch查看当前有哪些分支，当然，因为我们没有创建任何分支，目前只会有一个master分支。可以使用git checkout -b feature创建一个名为feature的分支。

这样我们就将我们的项目上传到github仓库。

 
项目的下载，查看和修改
第一步. 从GitHub上下载我们的项目代码。
1. 以Hello-World项目为例，点击绿色按钮Clone or download，然后在弹出窗口中点击剪切板图标，复制仓库的URL。

 

2. 在git bash中输入git clone https://github.com/feicui-android/Hello-World.git，下载项目源码。

第二步. 查看版本历史
1. cd到项目文件夹下，使用git log能看到我们的历史提交记录。

2. 要回到某一历史版本，可以使用git checkout commitId，看完后要回到最新代码，使用git checkout master。

第三步. 本地修改代码
你可以在我们的代码基线上任意修改，但为了下载新代码时不出现冲突，请遵循以下步骤：

1. 下载新代码：git pull。

2. 从master出捡出一个新的分支：git checkout -b feature。feature是分支名称，你可以随意取名，但请用英文。

3. 在feature分支上随意修改，改完后你可以提交你的修改：git commit -m "some message"。

4. 此时要同步代码，请先切回主分支：git checkout master，然后更新git pull。

5. 如果想删除自己建立的分支，使用git branch -D feature，注意执行此命令后分支被强制删除，无法恢复。

